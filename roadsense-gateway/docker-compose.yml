services:
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.2 # Ensure you are using the correct version as per your requirement
    container_name: roadsense-traefik
    env_file:
      - .env
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "5672:5672" # AMQP TCP EntryPoint
      - "5432:5432" # Postgres TCP EntryPoint
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config/certs:/etc/traefik/config:ro
      - ./logs:/traefik/logs
      - ./certs:/certs # Mount the certificates directory
    labels:
      - "traefik.enable=true"
      # Main HTTPS router
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
      # - "traefik.http.routers.traefik.middlewares=strip"
    networks:
      - traefik_network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: roadsense-rabbit
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    labels:
      - "traefik.enable=true"

      # HTTP Labels for Management Dashboard
      - "traefik.http.routers.rabbitmq-ui.rule=Host(`rabbit.${DOMAIN}`)"
      - "traefik.http.routers.rabbitmq-ui.entrypoints=websecure"
      - "traefik.http.routers.rabbitmq-ui.tls=true"
      - "traefik.http.services.rabbitmq-ui.loadbalancer.server.port=15672"

      # TCP Labels for AMQP Service
      - "traefik.tcp.routers.rabbitmq-amqp.entrypoints=amqp"
      - "traefik.tcp.routers.rabbitmq-amqp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.rabbitmq-amqp.tls=false"
      - "traefik.tcp.services.rabbitmq-amqp.loadbalancer.server.port=5672"
    networks:
      - traefik_network

  # Database
  db:
    image: timescale/timescaledb-ha:pg17
    container_name: "roadsense-db"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    labels:
      - "traefik.enable=true"

      # TCP Labels for Postgres
      - "traefik.tcp.routers.postgres.entrypoints=postgres"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.tls=false"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=${POSTGRES_PORT}"
    networks:
      - traefik_network
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persistent volume for Postgres

volumes:
  postgres_data:
    driver: local

networks:
  traefik_network:
    external: true
